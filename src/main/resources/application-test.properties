# =============================================================================
# TEST PROFILE CONFIGURATION
# =============================================================================
# This profile is specifically designed for UNIT TESTS only.
# 
# STRATEGY: Separate Unit Tests (H2) from Integration Tests (Testcontainers)
# - Unit Tests: Fast, isolated, no external dependencies
# - Integration Tests: Real database, slower, more realistic
#
# WHY H2 for Unit Tests?
# - ⚡ Speed: In-memory database, no I/O overhead
# - 🔒 Isolation: Each test gets fresh database
# - 🚀 CI/CD: No Docker required, runs anywhere
# - 🎯 Focus: Test business logic, not database specifics
#
# WHY NOT Testcontainers for Unit Tests?
# - 🐌 Slow: Docker container startup time
# - 🔧 Complex: Requires Docker in CI/CD
# - 🎯 Overkill: Unit tests don't need real database
# =============================================================================

# Disable Testcontainers for unit tests
# This prevents Spring from trying to start Postgres/Redis containers
spring.testcontainers.enabled=true

# H2 Database Configuration (In-Memory)
# - testdb: Database name (created automatically)
# - mem: In-memory mode (no file persistence)
# - sa: Default H2 username
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# JPA/Hibernate Configuration
# - create-drop: Create tables on startup, drop on shutdown
# - H2Dialect: Optimized for H2 database
# - console disabled: Not needed for automated tests
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=false

# Disable Redis for unit tests
# Unit tests should focus on business logic, not caching/session management
spring.data.redis.repositories.enabled=false
spring.session.store-type=none
spring.cache.type=none

# Disable Flyway for unit tests
# Flyway migrations are designed for PostgreSQL, not H2
spring.flyway.enabled=false

# JWT Configuration for testing
jwt.secret=TestJWTSecretKeyForUserServiceTestingPurposesOnly
jwt.issuer=yushan-user-service-test
jwt.algorithm=HS256

# Logging for unit tests
logging.level.com.yushan.user_service=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

# Disable Eureka for unit tests
eureka.client.enabled=false
spring.cloud.discovery.enabled=false

# =============================================================================
# NOTE: For Integration Tests, use application-integration-test.properties
# with Testcontainers configuration for real Postgres + Redis testing
# =============================================================================
